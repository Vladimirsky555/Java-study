/*
примитивные типы:
int, float, byte, char
Объектные типы:

Модификаторы применяемые к переменным:
final - помечает поле как константу. Присвоить значение переменной.
Один раз задаём значение и больше не меняем.

static - оно будет одно на все классы. Получаем доступ к полю класса, не создавая экземпляр класса.

transient - даное поле не будет участвовать в сериализации. У нас может быть несколько полей в классе.
Мы можем сериализовать класс. Получить набор байт, сохранить его. Десериализовать его из набора байтов.
Убирает из сериализации какое-то поле. Если не хотим чтобы поле участвовало в сериализации, помечаем
transient


volatile - в многопоточном программировании. Если несколько потоков читают эту переменную.
Мы можем пометить переменную так. И тогда будет использована эта версия переменной, а не кэшированная.
Если один поток пишет, другие читают. Тогда будет безопасные запись и чтение.

 */

public class TempClass {
    public static void main(String[] args) {
        Car2 car1 = new Car2();
        Car2 car2 = new Car2();
        Car3 car3 = new Car3();

        System.out.println(car1.MAX_SPEED);
        car1.MAX_SPEED = 250;//меняю поле одного класса, и оно меняется в другом, так как статическая переменная
        System.out.println(car2.MAX_SPEED);
        System.out.println(Car2.MAX_SPEED);

        System.out.println(car3.mag);//инициализирована как NULL по умолчанию
        System.out.println(car3.MAX_SPEED);//инициализирована 0 по умолчанию
    }

}
